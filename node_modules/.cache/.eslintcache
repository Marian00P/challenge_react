[{"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/index.js":"1","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/reportWebVitals.js":"2","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/App.js":"3","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/user/Login.js":"4","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/request.js":"5","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/cookies.js":"6","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/verification.js":"7","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/user_context.js":"8","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/user/Home.js":"9"},{"size":500,"mtime":1618536786000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1618531559779,"results":"12","hashOfConfig":"11"},{"size":973,"mtime":1618643588199,"results":"13","hashOfConfig":"11"},{"size":7812,"mtime":1618644161440,"results":"14","hashOfConfig":"11"},{"size":769,"mtime":1618641898553,"results":"15","hashOfConfig":"11"},{"size":452,"mtime":1618533080283,"results":"16","hashOfConfig":"11"},{"size":292,"mtime":1618533331069,"results":"17","hashOfConfig":"11"},{"size":273,"mtime":1618642970513,"results":"18","hashOfConfig":"11"},{"size":339,"mtime":1618643634171,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"w3olx1",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/index.js",[],["41","42"],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/reportWebVitals.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/App.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/user/Login.js",["43"],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/request.js",["44"],"\n/* This function allows you to send a request to address `path`,\n with the given `method` and `body` */\n import axios from 'axios'\n\n export async function sendRequest(methodOpt, headersOpt, keys, path) {\n  \n    var requestOptions = null;\n  \n    if (methodOpt === \"POST\") {\n      requestOptions = {\n        method: methodOpt,\n        headers: headersOpt,\n        body: keys\n      }\n      \n    } else if (methodOpt === \"GET\") {\n      requestOptions = {\n        method: methodOpt,\n        headers: headersOpt\n      }\n    } else if (methodOpt === \"PUT\") {\n      requestOptions = {\n        body: JSON.stringify(keys),\n        headers: headersOpt,\n        method: methodOpt\n      }\n    }\n      console.log(requestOptions);\n      return (await fetch(path, requestOptions))\n} ","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/cookies.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/verification.js",["45"],"/* Here the email is verified, concretly if has two @ and some . */\nfunction verifyEmail(email) {\n\n    const regExpMail = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;  \n    \n    if (regExpMail.test(email)) {\n      return true;\n      \n    } else {\n      return false;\n    }\n} export default verifyEmail","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/user_context.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/user/Home.js",["46","47","48","49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":122,"column":13,"nodeType":"57","messageId":"58","endLine":122,"endColumn":27},{"ruleId":"55","severity":1,"message":"59","line":4,"column":9,"nodeType":"57","messageId":"58","endLine":4,"endColumn":14},{"ruleId":"60","severity":1,"message":"61","line":4,"column":30,"nodeType":"62","messageId":"63","endLine":4,"endColumn":31,"suggestions":"64"},{"ruleId":"55","severity":1,"message":"65","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":14},{"ruleId":"55","severity":1,"message":"66","line":2,"column":16,"nodeType":"57","messageId":"58","endLine":2,"endColumn":24},{"ruleId":"55","severity":1,"message":"67","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":21},{"ruleId":"55","severity":1,"message":"68","line":4,"column":10,"nodeType":"57","messageId":"58","endLine":4,"endColumn":20},{"ruleId":"55","severity":1,"message":"69","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":15},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'requestOptions' is assigned a value but never used.","Identifier","unusedVar","'axios' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["72","73"],"'Link' is defined but never used.","'Redirect' is defined but never used.","'userContext' is defined but never used.","'SetCookies' is defined but never used.","'Cookies' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"74","fix":"75","desc":"76"},{"messageId":"77","fix":"78","desc":"79"},"removeEscape",{"range":"80","text":"81"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"82","text":"83"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[128,129],"",[128,128],"\\"]