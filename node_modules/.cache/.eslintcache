[{"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/index.js":"1","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/reportWebVitals.js":"2","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/App.js":"3","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/user/Login.js":"4","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/request.js":"5","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/cookies.js":"6","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/verification.js":"7","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/user_context.js":"8","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/user/Home.js":"9"},{"size":500,"mtime":1618711768154,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1618531559779,"results":"12","hashOfConfig":"11"},{"size":973,"mtime":1618712402189,"results":"13","hashOfConfig":"11"},{"size":9097,"mtime":1618718103098,"results":"14","hashOfConfig":"11"},{"size":769,"mtime":1618641898553,"results":"15","hashOfConfig":"11"},{"size":452,"mtime":1618711768142,"results":"16","hashOfConfig":"11"},{"size":292,"mtime":1618711768142,"results":"17","hashOfConfig":"11"},{"size":273,"mtime":1618711768170,"results":"18","hashOfConfig":"11"},{"size":1894,"mtime":1618717826189,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w3olx1",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/index.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/reportWebVitals.js",[],["42","43"],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/App.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/user/Login.js",["44","45"],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/request.js",["46"],"\n/* This function allows you to send a request to address `path`,\n with the given `method` and `body` */\n import axios from 'axios'\n\n export async function sendRequest(methodOpt, headersOpt, keys, path) {\n  \n    var requestOptions = null;\n  \n    if (methodOpt === \"POST\") {\n      requestOptions = {\n        method: methodOpt,\n        headers: headersOpt,\n        body: keys\n      }\n      \n    } else if (methodOpt === \"GET\") {\n      requestOptions = {\n        method: methodOpt,\n        headers: headersOpt\n      }\n    } else if (methodOpt === \"PUT\") {\n      requestOptions = {\n        body: JSON.stringify(keys),\n        headers: headersOpt,\n        method: methodOpt\n      }\n    }\n      console.log(requestOptions);\n      return (await fetch(path, requestOptions))\n} ",["47","48"],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/cookies.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/verification.js",["49"],"/* Here the email is verified, concretly if has two @ and some . */\nfunction verifyEmail(email) {\n\n    const regExpMail = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;  \n    \n    if (regExpMail.test(email)) {\n      return true;\n      \n    } else {\n      return false;\n    }\n} export default verifyEmail","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/user_context.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/user/Home.js",["50","51","52","53","54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":14},{"ruleId":"60","severity":1,"message":"64","line":8,"column":8,"nodeType":"62","messageId":"63","endLine":8,"endColumn":13},{"ruleId":"60","severity":1,"message":"64","line":4,"column":9,"nodeType":"62","messageId":"63","endLine":4,"endColumn":14},{"ruleId":"56","replacedBy":"65"},{"ruleId":"58","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":30,"nodeType":"69","messageId":"70","endLine":4,"endColumn":31,"suggestions":"71"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":14},{"ruleId":"60","severity":1,"message":"72","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":21},{"ruleId":"60","severity":1,"message":"73","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":30,"column":16,"nodeType":"76","messageId":"77","endLine":30,"endColumn":18},{"ruleId":"78","severity":1,"message":"79","line":37,"column":15,"nodeType":"80","endLine":37,"endColumn":47},{"ruleId":"78","severity":1,"message":"81","line":57,"column":17,"nodeType":"80","endLine":57,"endColumn":73},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.",["82"],["83"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["84","85"],"'userContext' is defined but never used.","'SetCookies' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"messageId":"86","fix":"87","desc":"88"},{"messageId":"89","fix":"90","desc":"91"},"removeEscape",{"range":"92","text":"93"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"94","text":"95"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[128,129],"",[128,128],"\\"]