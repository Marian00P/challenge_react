[{"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/index.js":"1","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/reportWebVitals.js":"2","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/App.js":"3","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/user/Login.js":"4","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/request.js":"5","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/cookies.js":"6","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/verification.js":"7","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/user_context.js":"8","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/user/Home.js":"9","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/superheroes/Superhero.js":"10","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/superheroes/SuperheroesList.js":"11","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/superheroes/SuperheroFinder.js":"12","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/hero_data_type.js":"13"},{"size":500,"mtime":1618711768154,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1618531559779,"results":"16","hashOfConfig":"15"},{"size":1094,"mtime":1618798942383,"results":"17","hashOfConfig":"15"},{"size":9222,"mtime":1618974581530,"results":"18","hashOfConfig":"15"},{"size":769,"mtime":1618641898553,"results":"19","hashOfConfig":"15"},{"size":452,"mtime":1618711768142,"results":"20","hashOfConfig":"15"},{"size":292,"mtime":1618711768142,"results":"21","hashOfConfig":"15"},{"size":324,"mtime":1618725117925,"results":"22","hashOfConfig":"15"},{"size":2538,"mtime":1618973940183,"results":"23","hashOfConfig":"15"},{"size":781,"mtime":1618973882587,"results":"24","hashOfConfig":"15"},{"size":1718,"mtime":1618975984044,"results":"25","hashOfConfig":"15"},{"size":3807,"mtime":1618960749920,"results":"26","hashOfConfig":"15"},{"size":1457,"mtime":1618808230172,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"w3olx1",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/index.js",[],["60","61"],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/reportWebVitals.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/App.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/user/Login.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/request.js",["62"],"\n/* This function allows you to send a request to address `path`,\n with the given `method` and `body` */\n import axios from 'axios'\n\n export async function sendRequest(methodOpt, headersOpt, keys, path) {\n  \n    var requestOptions = null;\n  \n    if (methodOpt === \"POST\") {\n      requestOptions = {\n        method: methodOpt,\n        headers: headersOpt,\n        body: keys\n      }\n      \n    } else if (methodOpt === \"GET\") {\n      requestOptions = {\n        method: methodOpt,\n        headers: headersOpt\n      }\n    } else if (methodOpt === \"PUT\") {\n      requestOptions = {\n        body: JSON.stringify(keys),\n        headers: headersOpt,\n        method: methodOpt\n      }\n    }\n      console.log(requestOptions);\n      return (await fetch(path, requestOptions))\n} ",["63","64"],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/cookies.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/verification.js",["65"],"/* Here the email is verified, concretly if has two @ and some . */\nfunction verifyEmail(email) {\n\n    const regExpMail = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;  \n    \n    if (regExpMail.test(email)) {\n      return true;\n      \n    } else {\n      return false;\n    }\n} export default verifyEmail","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/user_context.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/user/Home.js",["66","67","68"],"import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport logo from '../../logo.png'\nimport '../../styles/Home.css'\nimport Cookies from 'js-cookie';\nimport { SuperheroesList } from \"../superheroes/SuperheroesList\";\nimport { SuperheroFinder } from \"../superheroes/SuperheroFinder\";\n\nclass Home extends React.Component {\n\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loged: true,\n    }\n\n    this.logout = this.logout.bind(this);\n    this.handleModal = this.handleModal.bind(this);\n    \n  }\n\n  handleModal() {\n    var modal = document.getElementById(\"search_hero\")\n    console.log(modal)\n    if (modal.getAttribute(\"class\")==='modal') {\n      modal.setAttribute(\"class\", \"modal is-active\")\n    } else {\n      console.log(\"Open modal\")\n      modal.setAttribute(\"class\", \"modal\")\n    }\n  }\n\n  logout() {\n    Cookies.remove(\"user\");\n    this.setState({loged:false});\n  }\n  \n  render() {\n    const cookie = Cookies.getJSON(\"user\");\n    console.log(cookie)\n    if (cookie === undefined) {\n      return (<Redirect to='/'/>);\n    } else {\n      return(\n        <div class='container-home'>\n          <nav class=\"navbar is-transparent black\" >\n            <div class=\"navbar-brand\" >\n              <a class=\"navbar-item\">\n                <img src={logo} alt=\"Superhero: the new app to create a superheroes\" width=\"30\" height=\"35\" />\n              </a>\n              <a class=\"navbar-item\">\n                <button class='button is-success' onClick={this.handleModal}>Search superhero</button>\n              </a>\n              <div class=\"navbar-burger\" data-target=\"navbarExampleTransparentExample\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n\n            <div id=\"navbarExampleTransparentExample\" class=\"navbar-menu\">\n              <div class=\"navbar-start\">\n                <div class=\"navbar-item has-dropdown is-hoverable\">\n                  <div class=\"navbar-dropdown is-boxed\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"navbar-end\">\n                <div class=\"navbar-item\">\n                <a class=\"button is-danger color\" onClick={this.logout}>\n                  <strong>Logout</strong>\n                </a>\n                </div>\n              </div>\n            </div>\n          </nav>\n          <div class='superheroes'>\n            <SuperheroesList/>\n            <SuperheroFinder/>\n          </div>\n        </div>\n      )\n    }\n  }\n\n} \nexport {Home};","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/superheroes/Superhero.js",[],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/superheroes/SuperheroesList.js",["69","70","71"],"/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/superheroes/SuperheroFinder.js",["72","73","74","75"],"import React from 'react'\nimport Hero, { Hero_encountered } from '../utils/hero_data_type';\nimport { Superhero } from './Superhero';\n\nclass SuperheroFinder extends React.Component {\n\n  constructor(props) {\n      super(props);\n  \n      this.state = {\n        heroes: [Hero_encountered],\n        handleErrors: '',\n        hero_name: '',\n        find_hero: ''\n      }\n      this.findHero = this.findHero.bind(this)\n      this.findHandle = this.findHandle.bind(this)\n      this.handleModal = this.handleModal.bind(this)\n    }\n\n  handleModal() {\n    var modal = document.getElementById(\"search_hero\")\n    if (modal.getAttribute(\"class\")==='modal') {\n      modal.setAttribute(\"class\", \"modal is-active\")\n    } else {\n      modal.setAttribute(\"class\", \"modal\")\n    }\n  }\n\n  findHandle(){\n      this.setState({heroes: [Hero_encountered]})\n      this.findHero(this.state.hero_name)\n  }\n\n  findHero(name) {\n    this.setState({handleErrors: ''})\n\n    fetch(`https://www.superheroapi.com/api.php/3973112209448483/search/${name}`,{\n          headers: {\n          \"Content-Type\": \"application/json\"\n          },\n          method: \"GET\"\n      }).then(async response => {\n              \n          // token is an object {access_token, type}\n          const data = await response.json();\n          if (data.response === 'success'){\n            data.results.map(\n              hero => {\n                this.setState({heroes_data: this.state.heroes.push(hero)})\n              }\n            )\n          } else {\n            const error = `Superhero ${this.state.find_hero} does not exist :(`\n            this.setState({handleErrors: error})\n          }\n          \n      }).catch(error => {\n        console.log(error)\n      })\n  }\n\n  render() {\n    return(\n      <>\n        <div class='container-modal'>\n          <div class=\"modal\" id=\"search_hero\">\n            <div class=\"modal-background\"></div>\n            <div class=\"modal-card\">\n              <header class=\"modal-card-head\">\n                <p class=\"modal-card-title\">Find your SuperHero</p>\n                <button class=\"delete\" aria-label=\"close\" onClick={this.handleModal}></button>\n              </header>\n              <section class=\"modal-card-body\">\n                <div class=\"field\">\n                  <label class=\"label\">Name of the superhero</label>\n                  <div class=\"control\">\n                    <input class=\"input\" type=\"text\" placeholder=\"e.g. Batman\" onChange={e => {\n                      this.setState({handleErrors: ''})\n                      this.setState({hero_name: e.target.value})\n                      }}/>\n                  </div>\n                </div>\n                  {\n                    (this.state.handleErrors !== '') ?\n                        <p class='help is-danger'>{this.state.handleErrors}</p>\n                    :\n                    <></>\n                  }\n                  <div class=\"field\">\n                  {\n                    this.state.heroes.filter(value => value.id !== \"-1\").map(\n                      hero => (\n                          // console.log(hero.image)\n                        <div class=\"superhero is-desk\">\n                          <h2>{hero.name}</h2>\n                          <img width={100} height={100} src={hero.image.url}/>\n                          <input class='button is-success' value=\"Add to team\"/>\n                        </div>\n                      )\n                    )\n                  }\n                  </div>\n              </section>\n              <footer class=\"modal-card-foot\">\n                <button class=\"button is-success\" onClick={this.findHandle}>Search</button>\n              </footer>\n            </div>\n          </div>\n        </div>\n        <div class=\"container results-finder\">\n      </div>\n    </>\n    )\n  }\n} export {SuperheroFinder}","/home/mariano/Escritorio/Alkemy_project/challenge_react/src/components/utils/hero_data_type.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":4,"column":9,"nodeType":"82","messageId":"83","endLine":4,"endColumn":14},{"ruleId":"76","replacedBy":"84"},{"ruleId":"78","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":4,"column":30,"nodeType":"88","messageId":"89","endLine":4,"endColumn":31,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":50,"column":15,"nodeType":"93","endLine":50,"endColumn":38},{"ruleId":"91","severity":1,"message":"92","line":53,"column":15,"nodeType":"93","endLine":53,"endColumn":38},{"ruleId":"91","severity":1,"message":"92","line":73,"column":17,"nodeType":"93","endLine":73,"endColumn":73},{"ruleId":"80","severity":1,"message":"94","line":1,"column":28,"nodeType":"82","messageId":"83","endLine":1,"endColumn":38},{"ruleId":"80","severity":1,"message":"95","line":1,"column":40,"nodeType":"82","messageId":"83","endLine":1,"endColumn":49},{"ruleId":"96","severity":1,"message":"97","line":22,"column":12,"nodeType":"98","messageId":"99","endLine":22,"endColumn":14},{"ruleId":"80","severity":1,"message":"100","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":12},{"ruleId":"80","severity":1,"message":"101","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":49,"column":20,"nodeType":"98","messageId":"99","endLine":49,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":97,"column":27,"nodeType":"93","endLine":97,"endColumn":79},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar",["104"],["105"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["106","107"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useContext' is defined but never used.","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Hero' is defined but never used.","'Superhero' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"messageId":"108","fix":"109","desc":"110"},{"messageId":"111","fix":"112","desc":"113"},"removeEscape",{"range":"114","text":"115"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"116","text":"117"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[128,129],"",[128,128],"\\"]